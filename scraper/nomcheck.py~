""""Parses each individual user file into a gigantic final document

To Doss:

URGENT:
HOW TO CHANGE NOMINATIONS
Detect games / Series
Detect and disallow retirees
Determine how noms should be formatted.

Secondary:
Last time of update / post number
Find out Google's CSV API.
Header file to the main user file that will allow me 
to update noms in a linear scan, instead of O(n^2) time. 


Nice to have:
Determine how to deal with Aliases/Noisy data.
Error checking.
"""

#from sys import
import os

class User(object):
    '''Implements a user with tracks, games and nominations '''
    def __init__(self, name):
        self.noms = {}
        self.name = name

    def add_nom(self, track, game, link):
        '''Adds a nomination, throwing an error message if noms are full.
        Should have the following functionality in future:
        Checking for 5 doubles
        Define structure of count (Bool or number?)
        Checking for mistyped track names and stuff'''
        double = False
        if track == '':
            return
        if len(self.noms) < 15:
            if "dbl" in track: # Seriously figure out how to make this robust
                double = True
                track = track.replace('double', '')
            self.noms[track] = (game, link, double)
        else:
            print "Nominations full for", self.name, "discarding", track
        return

    def remove_nom(self, track):
        '''Checks to see if a nomination exists and deletes if it does. 
        Otherwise informs what user doesn't have it hand continues'''
        if self.noms.has_key(track):
            del self.noms[track]
        else:
            print "Error!", track, "Does not exist as a track for", self.name
        
def consolidate(nom_file, folder):
    '''Scans through the folder for every user text file and
    writes it to the nom_file'''
    nom_file = open("nominations.txt", 'w')
    
    listing = os.listdir(folder)
    for infile in listing:

        with open(folder + infile) as text_file:
            name = infile.split(".")[0].strip()
            current_user = User(name)
            lines = [x.strip() for x in text_file.readlines()]
            game, track, link = '', '', ''
            
        for ii in range(len(lines)):
            if lines[ii] == '='*10:
                break
            elif ii % 4 == 0:
                game = lines[ii]
            elif ii % 4 == 1:
                track = lines[ii]
            elif ii % 4 == 2:
                link = lines[ii]
            elif ii % 4 == 3:
                current_user.add_nom(game, track, link)
            else:
                pass
            
        print "Open Nomfile here", name
        nom_file.write(current_user.name+"\n\n")
        for track in current_user.noms:
            nom_file.write(track+"\n")

            for element in current_user.noms[track]:
                print element
                if type(element) is bool:
                    pass
                else:
                    nom_file.write(element+"\n")
#                current_user.noms[track])
            nom_file.write('\n')
        # open("nominations.txt, 'a'")
        #Switch to below in final
        nom_file.write('---\n\n')
    nom_file.close()    
            
def main():
    '''Main function. Currently doesn't take text files as input '''
    noms = open('nominations.txt', 'w')
    subfolder = './users/'
    consolidate(noms, subfolder)

    
if __name__ == "__main__":
    main()
